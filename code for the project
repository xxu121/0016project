//this code is for both distance <30 for ultasonic and motion detected 3 times
#include <Servo.h>

// PIR Sensor
const int pirSensorPin = 10;
unsigned long lastMotionTime = 0;

// Buzzer
const int buzzerPin = 11;
const int buzzerFrequency1 = 2000;
const int buzzerFrequency2 = 1000;
const int beepDuration = 250;
const int warningDuration = 10000;

// Servo
const int servoPin = 9;
Servo myServo;

// Ultrasonic Sensor
const int trigPin = 2;
const int echoPin = 3;

// Timing and Counting
int motionCounter = 0;
const long resetInterval = 60000; // 1 minute

void setup() {
  pinMode(pirSensorPin, INPUT);
  pinMode(buzzerPin, OUTPUT);
  myServo.attach(servoPin);
  myServo.write(0);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  Serial.begin(9600);
}

void loop() {
  unsigned long currentMillis = millis();

  // Check for motion using PIR sensor
  int pirValue = digitalRead(pirSensorPin);
  if (pirValue == HIGH) {
    // Debounce for 10 seconds
    if (currentMillis - lastMotionTime > 10000) {
      lastMotionTime = currentMillis;

      // Read ultrasonic sensor
      digitalWrite(trigPin, LOW);
      delayMicroseconds(2);
      digitalWrite(trigPin, HIGH);
      delayMicroseconds(10);
      digitalWrite(trigPin, LOW);
      long duration = pulseIn(echoPin, HIGH);
      long distance = (duration / 2) / 29.1; // Convert to cm

      // Print distance from ultrasonic sensor
      Serial.print("Ultrasonic Distance: ");
      Serial.print(distance);
      Serial.println(" cm");

      // Check if distance is less than 30 cm
      if (distance < 30) {
        motionCounter++;
        Serial.print("Motion detected. Count: ");
        Serial.println(motionCounter);
      }
    }
  }

  // Check for motion using PIR sensor
  if (pirValue == HIGH) {
    // Debounce for 10 seconds
    if (currentMillis - lastMotionTime > 10000) {
      lastMotionTime = currentMillis;

      // Read ultrasonic sensor
      digitalWrite(trigPin, LOW);
      delayMicroseconds(2);
      digitalWrite(trigPin, HIGH);
      delayMicroseconds(10);
      digitalWrite(trigPin, LOW);
      long duration = pulseIn(echoPin, HIGH);
      long distance = (duration / 2) / 29.1; // Convert to cm

      // Check if distance is less than 30 cm
      if (distance < 30) {
        motionCounter++;
        Serial.print("Motion detected. Count: ");
        Serial.println(motionCounter);
      }
    }
  }

  // Reset motion count every minute
  if (currentMillis - lastMotionTime >= resetInterval) {
    motionCounter = 0;
  }

  // If motion is detected 3 times in a minute
  if (motionCounter >= 3) {
    Serial.println("Activating warning signal.");
    myServo.write(90); // Move servo to lock position
    unsigned long startWarningTime = millis();
    while (millis() - startWarningTime < warningDuration) {
      tone(buzzerPin, buzzerFrequency1, beepDuration);
      delay(beepDuration * 2);
      tone(buzzerPin, buzzerFrequency2, beepDuration);
      delay(beepDuration * 2);
    }
    noTone(buzzerPin);
    motionCounter = 0; // Reset motion count
  }

  delay(100); // Short delay for stability
}

